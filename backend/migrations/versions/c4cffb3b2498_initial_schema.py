"""initial schema"""

revision = 'c4cffb3b2498'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa



def upgrade() -> None:
# ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('chat_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('ear_num_context', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_type_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iot_device',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('device_type', sa.String(length=120), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('location', sa.String(length=120), nullable=True),
    sa.Column('control_url', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('api_key_digest', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_iot_device_api_key_digest'), 'iot_device', ['api_key_digest'], unique=True)
    op.create_index('ix_iot_device_user_category', 'iot_device', ['user_id', 'category'], unique=False)
    op.create_table('product_batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('batch_number', sa.String(length=100), nullable=False),
    sa.Column('product_name', sa.String(length=150), nullable=False),
    sa.Column('product_type', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('esg_highlights', sa.Text(), nullable=True),
    sa.Column('production_date', sa.Date(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('origin_story', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_batch_batch_number'), 'product_batch', ['batch_number'], unique=True)
    op.create_table('sheep',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('EarNum', sa.String(length=100), nullable=False),
    sa.Column('BirthDate', sa.String(length=50), nullable=True),
    sa.Column('Sex', sa.String(length=20), nullable=True),
    sa.Column('Breed', sa.String(length=100), nullable=True),
    sa.Column('Sire', sa.String(length=100), nullable=True),
    sa.Column('Dam', sa.String(length=100), nullable=True),
    sa.Column('BirWei', sa.Float(), nullable=True),
    sa.Column('SireBre', sa.String(length=100), nullable=True),
    sa.Column('DamBre', sa.String(length=100), nullable=True),
    sa.Column('MoveCau', sa.String(length=100), nullable=True),
    sa.Column('MoveDate', sa.String(length=50), nullable=True),
    sa.Column('Class', sa.String(length=100), nullable=True),
    sa.Column('LittleSize', sa.Integer(), nullable=True),
    sa.Column('Lactation', sa.Integer(), nullable=True),
    sa.Column('ManaClas', sa.String(length=100), nullable=True),
    sa.Column('FarmNum', sa.String(length=100), nullable=True),
    sa.Column('RUni', sa.String(length=100), nullable=True),
    sa.Column('Body_Weight_kg', sa.Float(), nullable=True),
    sa.Column('Age_Months', sa.Integer(), nullable=True),
    sa.Column('breed_category', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.Column('status_description', sa.Text(), nullable=True),
    sa.Column('target_average_daily_gain_g', sa.Float(), nullable=True),
    sa.Column('milk_yield_kg_day', sa.Float(), nullable=True),
    sa.Column('milk_fat_percentage', sa.Float(), nullable=True),
    sa.Column('number_of_fetuses', sa.Integer(), nullable=True),
    sa.Column('expected_fiber_yield_g_day', sa.Float(), nullable=True),
    sa.Column('activity_level', sa.String(length=100), nullable=True),
    sa.Column('other_remarks', sa.Text(), nullable=True),
    sa.Column('agent_notes', sa.Text(), nullable=True),
    sa.Column('next_vaccination_due_date', sa.String(length=50), nullable=True),
    sa.Column('next_deworming_due_date', sa.String(length=50), nullable=True),
    sa.Column('expected_lambing_date', sa.String(length=50), nullable=True),
    sa.Column('manure_management', sa.String(length=100), nullable=True),
    sa.Column('primary_forage_type', sa.String(length=100), nullable=True),
    sa.Column('welfare_score', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'EarNum', name='_user_ear_num_uc')
    )
    op.create_index('ix_sheep_user_status', 'sheep', ['user_id', 'status'], unique=False)
    op.create_table('automation_rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('trigger_source_device_id', sa.Integer(), nullable=False),
    sa.Column('trigger_condition', sa.JSON(), nullable=False),
    sa.Column('action_target_device_id', sa.Integer(), nullable=False),
    sa.Column('action_command', sa.JSON(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['action_target_device_id'], ['iot_device.id'], ),
    sa.ForeignKeyConstraint(['trigger_source_device_id'], ['iot_device.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_sheep_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('sheep_id', sa.Integer(), nullable=False),
    sa.Column('contribution_type', sa.String(length=100), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('quantity_unit', sa.String(length=50), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['product_batch.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sheep_id'], ['sheep.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('batch_id', 'sheep_id', name='uq_batch_sheep')
    )
    op.create_table('event_description_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_type_option_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['event_type_option_id'], ['event_type_option.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('processing_step',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('evidence_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['product_batch.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_processing_step_batch_order', 'processing_step', ['batch_id', 'sequence_order'], unique=False)
    op.create_table('sensor_reading',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['iot_device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_sensor_reading_device_created_at', 'sensor_reading', ['device_id', 'created_at'], unique=False)
    op.create_table('sheep_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sheep_id', sa.Integer(), nullable=False),
    sa.Column('event_date', sa.String(length=50), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('medication', sa.String(length=150), nullable=True),
    sa.Column('withdrawal_days', sa.Integer(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sheep_id'], ['sheep.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_sheep_event_user_sheep_date', 'sheep_event', ['user_id', 'sheep_id', 'event_date'], unique=False)
    op.create_index('ix_sheep_event_user_type_date', 'sheep_event', ['user_id', 'event_type', 'event_date'], unique=False)
    op.create_table('sheep_historical_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sheep_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.String(length=50), nullable=False),
    sa.Column('record_type', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sheep_id'], ['sheep.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_sheep_hist_user_type_date', 'sheep_historical_data', ['user_id', 'record_type', 'record_date'], unique=False)
    op.create_table('device_control_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('target_device_id', sa.Integer(), nullable=False),
    sa.Column('command', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('response_payload', sa.JSON(), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['automation_rule.id'], ),
    sa.ForeignKeyConstraint(['target_device_id'], ['iot_device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_device_control_log_rule', 'device_control_log', ['rule_id', 'executed_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
# ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_device_control_log_rule', table_name='device_control_log')
    op.drop_table('device_control_log')
    op.drop_index('ix_sheep_hist_user_type_date', table_name='sheep_historical_data')
    op.drop_table('sheep_historical_data')
    op.drop_index('ix_sheep_event_user_type_date', table_name='sheep_event')
    op.drop_index('ix_sheep_event_user_sheep_date', table_name='sheep_event')
    op.drop_table('sheep_event')
    op.drop_index('ix_sensor_reading_device_created_at', table_name='sensor_reading')
    op.drop_table('sensor_reading')
    op.drop_index('ix_processing_step_batch_order', table_name='processing_step')
    op.drop_table('processing_step')
    op.drop_table('event_description_option')
    op.drop_table('batch_sheep_association')
    op.drop_table('automation_rule')
    op.drop_index('ix_sheep_user_status', table_name='sheep')
    op.drop_table('sheep')
    op.drop_index(op.f('ix_product_batch_batch_number'), table_name='product_batch')
    op.drop_table('product_batch')
    op.drop_index('ix_iot_device_user_category', table_name='iot_device')
    op.drop_index(op.f('ix_iot_device_api_key_digest'), table_name='iot_device')
    op.drop_table('iot_device')
    op.drop_table('event_type_option')
    op.drop_table('chat_history')
    op.drop_table('user')
    # ### end Alembic commands ###
